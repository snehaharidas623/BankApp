data binding in angular
-----------------------

ts-component
html-view

binding methods
-------------
1) one way binding
    1.1   component to view
      1.1.1 string interpollation  - {{}}
     1.1.2 property binding       - [property]="value"

   
   1.2   view to component
         1.2.1  event-binding     -  (eventname)="method name()"
         1.2.2  event-binding using $event - (eventname)="method name($argument)"
         1.2.3 event binding using template rendering variable #variable

2) two way binding
------------------
  2.1  ngmodel -- [(ngmodel)] ="value"
      it comes from FormsModule. Its a third party module so we want to install  


      Redirection in angular
      ---------------------
navigateByUrl -method used to Redirection
router     -class            


Dependency Injection
-------------------
used for oru clasinte akath lle method ne vere classne use akkan vendit
this step used in construcor

steps
-----
* First give access specifier- public/private
* Then give variable then put colon and give class name
eg:-  constructor(private variablename:Router)
 default acees specifier will be public


 Angular Services
 ----------------
 * Databses are using in every compment so instead of using them in every component,
    we can use angular service technology
 * Command for genarating service :-  ng g s servicename


 Angular directives - used to manage dom
 ------------------
 1- structural directives - to handle structured data in view of a component
   -nfFor - can directly apply in html
   -ngIf

2- component directives
3- attribute directives


Forms in angular
---------------
we can create forms in 2 way
1) TEMPLATE DRIVEN FORM 
    - form is created normally using html.validation of these type of forms is difficult in this method. so we convert into 
    model driven form for easy validation.

2) MODEL DRIVEN FORM 
   -to crete this form we use the method reactive form
   -to create reactive form we want - ReactiveFormsModule
   -FormBuilder - class of ReactiveFormsModule
     -it contain a group,array and a control


     validate Model Form
     -------------------
     validator class-inbuilt class in angular. it includes methods for apply validation

access errors in validator route
--------------------------------
    this.registerForm.get('uname')?.errors
          -valid -if valid we get empty response
          -invalid -if invalid there will be a content


  LOCAL STORAGE IN ANGULAR 
  ------------------------
  -localstorage.setItem() - Store 
  -localstorage.getItem() -access 
  -localstorage.removeItem() -delete

  Parent child component communication in Angular
  -----------------------------------------------



@Input - to shar edata from parent to child
@Output - to shar edata from child to parent
datas can only be shar evia selectors of component


user defined Event creation in angular
-------------------------------------
EventEmitter - class used to create events (comes fro  angular core)
emit() - to start the event


  Date & Time in Angular
  ----------------------
  Date - class
  - create an object of this date class to access date and time


Angular pipe
-----------
to transform data from one form to another
eg- date pipe

npm i -used to clone from git


CLIENT SERVER INTEGRATIOn
-------------------------
-------------------------

http request creation
--------------------
httpClientModule -module
HttpClient       -class


asynchronous request solve in ts
--------------------------------
js-promise -resolve/reject
              |         |
              then()      catch()


ts- observable -resolve/        reject
                    |             |
                subscribe()        catch()     

Rxjs  -library used to solve asynchronous code in ts
(reactive extension for js)                


APPEND TOKEN IN HEADERS of api/http req
-----------------------
create HEADERS
    HttpHeaders - class to create header object
    eg-     let headers = new HttpHeaders()

Append headers
         headers.append('access-token', token)




